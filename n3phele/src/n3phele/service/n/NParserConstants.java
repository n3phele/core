/* Generated By:JavaCC: Do not edit this line. NParserConstants.java */
/**
 * (C) Copyright 2010-2013. Nigel Cook. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * 
 * Licensed under the terms described in LICENSE file that accompanied this code, (the "License"); you may not use this file
 * except in compliance with the License. 
 * 
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on 
 *  an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the 
 *  specific language governing permissions and limitations under the License.
 */

package n3phele.service.n;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COLON = 6;
  /** RegularExpression Id. */
  int NAME = 7;
  /** RegularExpression Id. */
  int DESCRIPTION = 8;
  /** RegularExpression Id. */
  int VERSION = 9;
  /** RegularExpression Id. */
  int PREFERRED = 10;
  /** RegularExpression Id. */
  int PUBLIC = 11;
  /** RegularExpression Id. */
  int ICON = 12;
  /** RegularExpression Id. */
  int INPUT = 13;
  /** RegularExpression Id. */
  int OUTPUT = 14;
  /** RegularExpression Id. */
  int PARAMETERS = 15;
  /** RegularExpression Id. */
  int COMMENT = 20;
  /** RegularExpression Id. */
  int WHITESPACE = 21;
  /** RegularExpression Id. */
  int OPTIONAL = 22;
  /** RegularExpression Id. */
  int INT = 23;
  /** RegularExpression Id. */
  int FLOAT = 24;
  /** RegularExpression Id. */
  int STRING = 25;
  /** RegularExpression Id. */
  int SECRET = 26;
  /** RegularExpression Id. */
  int BOOLEAN = 27;
  /** RegularExpression Id. */
  int EQUALS = 28;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 29;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 30;
  /** RegularExpression Id. */
  int HEX_LITERAL = 31;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 32;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 33;
  /** RegularExpression Id. */
  int EXPONENT = 34;
  /** RegularExpression Id. */
  int BOOLEAN_LITERAL = 35;
  /** RegularExpression Id. */
  int STRING_LITERAL = 36;
  /** RegularExpression Id. */
  int URI_LITERAL = 37;
  /** RegularExpression Id. */
  int VARIABLE_NAME = 38;
  /** RegularExpression Id. */
  int NAMESTART = 39;
  /** RegularExpression Id. */
  int NAMEREST = 40;
  /** RegularExpression Id. */
  int FILESPEC = 41;
  /** RegularExpression Id. */
  int FILESTART = 42;
  /** RegularExpression Id. */
  int FILEREST = 43;
  /** RegularExpression Id. */
  int VALUE = 44;
  /** RegularExpression Id. */
  int VALUESTART = 45;
  /** RegularExpression Id. */
  int DESCRIPTIONTEXT = 48;
  /** RegularExpression Id. */
  int BODY_COMMENT = 52;
  /** RegularExpression Id. */
  int CLOUDNAME = 53;
  /** RegularExpression Id. */
  int CLOUDSTART = 54;
  /** RegularExpression Id. */
  int CLOUDMORE = 55;
  /** RegularExpression Id. */
  int END = 58;
  /** RegularExpression Id. */
  int IMPLEMENTATION = 59;
  /** RegularExpression Id. */
  int ANNOTATION = 60;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int simpleValueProcessing = 1;
  /** Lexical state. */
  int descriptionValueProcessing = 2;
  /** Lexical state. */
  int blockProcessing = 3;
  /** Lexical state. */
  int cloudProcessing = 4;
  /** Lexical state. */
  int bodyProcessing = 5;
  /** Lexical state. */
  int commentProcessing = 6;
  /** Lexical state. */
  int cloudBodyProcessing = 7;
  /** Lexical state. */
  int annotationProcessing = 8;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<COLON>",
    "\"name\"",
    "\"description\"",
    "\"version\"",
    "\"preferred\"",
    "\"public\"",
    "\"icon\"",
    "\"input files\"",
    "\"output files\"",
    "\"parameters\"",
    "\"\\n\"",
    "\"\\t\"",
    "\" \"",
    "\"\\r\\n\"",
    "<COMMENT>",
    "<WHITESPACE>",
    "\"optional\"",
    "<INT>",
    "<FLOAT>",
    "\"string\"",
    "\"secret\"",
    "\"boolean\"",
    "\"=\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<BOOLEAN_LITERAL>",
    "<STRING_LITERAL>",
    "<URI_LITERAL>",
    "<VARIABLE_NAME>",
    "<NAMESTART>",
    "<NAMEREST>",
    "<FILESPEC>",
    "<FILESTART>",
    "<FILEREST>",
    "<VALUE>",
    "<VALUESTART>",
    "<token of kind 46>",
    "<token of kind 47>",
    "<DESCRIPTIONTEXT>",
    "<token of kind 49>",
    "\"\\n\"",
    "\"\\r\"",
    "<BODY_COMMENT>",
    "<CLOUDNAME>",
    "<CLOUDSTART>",
    "<CLOUDMORE>",
    "<token of kind 56>",
    "\"\\n\"",
    "\"\\r\\n\"",
    "<IMPLEMENTATION>",
    "<ANNOTATION>",
  };

}
