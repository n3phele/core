# jujuService.n
# Author: Nigel Cook
name       : jujuService
description: create a new service for juju deployment
version    : 0.2
preferred  : true
processor  : StackService
public     : true
icon       : http://www.n3phele.com/icons/custom
parameters :
                string juju_version = "0.6" # version to download of juju
HPZone1: # HP Cloud
                $$vmTavares = CREATEVM --name vmTavares
                $$serviceName = $${"foo"}
                ON $$vmTavares  sudo apt-get -y install python-software-properties
                                sudo add-apt-repository -y ppa:juju/$$juju_version ;
                                sudo apt-get update -y && sudo apt-get install -y -qq juju
                                if [ -d ~/.juju ]
                                then rm -rf ~/.juju
                                fi
                                mkdir ~/.juju
                                echo "environments:" >> ~/.juju/environments.yaml
								echo "  $${$$serviceName}:" >> ~/.juju/environments.yaml
								echo "    juju-origin: ppa" >> ~/.juju/environments.yaml
								echo "    control-bucket: juju-control-bucket-pugens" >> ~/.juju/environments.yaml
								echo "    admin-secret: secretword" >> ~/.juju/environments.yaml
								echo "    default-image-id: 8419" >> ~/.juju/environments.yaml
								echo "    region: az-1.region-a.geo-1" >> ~/.juju/environments.yaml
								echo "    project-name: nigel.cook@hp.com" >> ~/.juju/environments.yaml
								echo "    auth-url: https://region-a.geo-1.identity.hpcloudsvc.com:35357/v2.0/" >> ~/.juju/environments.yaml
								echo "    auth-mode: keypair" >> ~/.juju/environments.yaml
								echo "    type: openstack" >> ~/.juju/environments.yaml
								echo "    default-series: precise" >> ~/.juju/environments.yaml
								echo "    access-key: AMT1HHEYHPU43HYRV69X" >> ~/.juju/environments.yaml
								echo "    secret-key: wTPmC07WijJXfAPVKdqqJPqssANMHfHq99yLsGPN" >> ~/.juju/environments.yaml
                                chmod go-rxw ~/.juju/environments.yaml
                                rm -f ~/.ssh/id_rsa
                                ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ""
                                juju bootstrap
                EXPORT $$vmTavares
                $$bootstrapIP = ON $$vmTavares
                				echo "StrictHostKeyChecking no" >~/.ssh/config
                				chmod 400 ~/.ssh/config
                                STAT="none"
                                RUN_STATUS="running"
                                while [ "$STAT" != "$RUN_STATUS" ];
                                do sleep 20;
                                juju status > tmp.txt;
                                STAT=$(sed -n -e '0,/agent-state: /s///p' tmp.txt);
                                STAT=$(echo $STAT | tr -d ' ')
                                done
                                IPS=$(grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' tmp.txt)
                                IPA=(${IPS//:/ })
                                IP=$(echo ${IPA[0]})
                                IP=$(echo $IP | tr -d ' ')
                                echo $IP
                $$bootstrap = ASSIMILATEVM --targetIP $$bootstrapIP.stdout
                EXPORT $$bootstrap


HPZone2: # HP Cloud
                $$vmTavares = CREATEVM --name vmTavares
                $$serviceName = $${"foo"}
                ON $$vmTavares  sudo apt-get -y install python-software-properties
                                sudo add-apt-repository -y ppa:juju/$$juju_version ;
                                sudo apt-get update -y && sudo apt-get install -y -qq juju
                                if [ -d ~/.juju ]
                                then rm -rf ~/.juju
                                fi
                                mkdir ~/.juju
                                echo "environments:" >> ~/.juju/environments.yaml
								echo "  $${$$serviceName}:" >> ~/.juju/environments.yaml
								echo "    juju-origin: ppa" >> ~/.juju/environments.yaml
								echo "    control-bucket: juju-control-bucket-pugens" >> ~/.juju/environments.yaml
								echo "    admin-secret: secretword" >> ~/.juju/environments.yaml
								echo "    default-image-id: 67074" >> ~/.juju/environments.yaml
								echo "    region: az-2.region-a.geo-1" >> ~/.juju/environments.yaml
								echo "    project-name: nigel.cook@hp.com" >> ~/.juju/environments.yaml
								echo "    auth-url: https://region-a.geo-1.identity.hpcloudsvc.com:35357/v2.0/" >> ~/.juju/environments.yaml
								echo "    auth-mode: keypair" >> ~/.juju/environments.yaml
								echo "    type: openstack" >> ~/.juju/environments.yaml
								echo "    default-series: precise" >> ~/.juju/environments.yaml
								echo "    access-key: AMT1HHEYHPU43HYRV69X" >> ~/.juju/environments.yaml
								echo "    secret-key: wTPmC07WijJXfAPVKdqqJPqssANMHfHq99yLsGPN" >> ~/.juju/environments.yaml
                                chmod go-rxw ~/.juju/environments.yaml
                                rm -f ~/.ssh/id_rsa
                                ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ""
                                juju bootstrap
                EXPORT $$vmTavares
                $$bootstrapIP = ON $$vmTavares
                				echo "StrictHostKeyChecking no" >~/.ssh/config
                				chmod 400 ~/.ssh/config
                                STAT="none"
                                RUN_STATUS="running"
                                while [ "$STAT" != "$RUN_STATUS" ];
                                do sleep 20;
                                juju status > tmp.txt;
                                STAT=$(sed -n -e '0,/agent-state: /s///p' tmp.txt);
                                STAT=$(echo $STAT | tr -d ' ')
                                done
                                IPS=$(grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' tmp.txt)
                                IPA=(${IPS//:/ })
                                IP=$(echo ${IPA[0]})
                                IP=$(echo $IP | tr -d ' ')
                                echo $IP
                $$bootstrap = ASSIMILATEVM --targetIP $$bootstrapIP.stdout
                EXPORT $$bootstrap



