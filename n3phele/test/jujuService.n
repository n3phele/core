# jujuService.n
# Author: Nigel Cook
name       : jujuService
description: create a new service for juju deployment
version    : 0.3
preferred  : true
processor  : StackService
public     : true
icon       : http://www.n3phele.com/icons/custom
parameters :
            
HPZone1: # HP Cloud
                $$vmTavares = CREATEVM --name vmTavares
                $$controlBucket = $${"n3phele-"+$$serviceName+$$ownerId}
                $$credential = $$key($$vmTavares.account)
                $$tenant = $$regex($$credential[0],"([^:]+):([^:]+)",1)
                $$key = $$regex($$credential[0],"([^:]+):([^:]+)",2)
                $$secret = $$credential[1]
                ON $$vmTavares 
                                sudo add-apt-repository -y ppa:juju/devel
                                sudo apt-get update -y  && sudo apt-get install -y juju-core
                                if [ -d ~/.juju ]
                                then rm -rf ~/.juju
                                fi
                                mkdir ~/.juju
                                echo "default: $${$$serviceName}" >> ~/.juju/environments.yaml
                                echo "environments:" >> ~/.juju/environments.yaml
								echo "  $${$$serviceName}:" >> ~/.juju/environments.yaml
								echo "    type: openstack" >> ~/.juju/environments.yaml
								echo "    default-series: precise" >> ~/.juju/environments.yaml
								echo "    use-floating-ip: false" >> ~/.juju/environments.yaml
								echo "    control-bucket: $${$$controlBucket}" >> ~/.juju/environments.yaml
								echo "    admin-secret: secretword" >> ~/.juju/environments.yaml
								echo "    public-bucket-url: https://region-a.geo-1.objects.hpcloudsvc.com/v1/60502529753910" >> ~/.juju/environments.yaml
								echo "    region: az-1.region-a.geo-1" >> ~/.juju/environments.yaml
								echo "    tenant-name: $${$$tenant}" >> ~/.juju/environments.yaml
								echo "    auth-url: https://region-a.geo-1.identity.hpcloudsvc.com:35357/v2.0/" >> ~/.juju/environments.yaml
								echo "    auth-mode: keypair" >> ~/.juju/environments.yaml
								echo "    access-key: $${$$key}" >> ~/.juju/environments.yaml
								echo "    secret-key: $${$$secret}" >> ~/.juju/environments.yaml
                                chmod go-rxw ~/.juju/environments.yaml
                                rm -f ~/.ssh/id_rsa
                                ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ""
                                juju bootstrap
                EXPORT $$vmTavares
                $$bootstrapIP = ON $$vmTavares
                                STAT="none"
                                RUN_STATUS="started"
                                while [ "$STAT" != "$RUN_STATUS" ];
                                do sleep 20;
                                juju status > tmp.txt;
                                STAT=$(sed -n -e '0,/agent-state: /s///p' tmp.txt);
                                STAT=$(echo $STAT | tr -d ' ')
                                done
                                IPS=$(grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' tmp.txt)
                                IPA=(${IPS//:/ })
                                IP=$(echo ${IPA[0]})
                                IP=$(echo $IP | tr -d ' ')
                                echo $IP
                $$bootstrap = ASSIMILATEVM --targetIP $$bootstrapIP.stdout
                EXPORT $$bootstrap
#
#
# Replicate the environment on the bootstrap machine so that juju CLI can run there
#
#                ON $$vmTavares
#                				juju scp ~/.juju/* 0:./.juju/
#                				juju ssh 0 ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ""
#                				juju ssh 0 sudo add-apt-repository -y ppa:juju/devel
#                                juju ssh 0 sudo apt-get update -y  && sudo apt-get install -y juju-core
#                                juju ssh 0 juju status
