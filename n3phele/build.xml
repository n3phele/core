<project name="n3phele test" basedir="." default="junit">

	<property name="sdk.dir" location="/home/ubuntu/appengine-java-sdk-1.7.5" />
	<property name="gwt.dir" location="/home/ubuntu/gwt-2.5.0" />
	<import file="${sdk.dir}/config/user/ant-macros.xml" />
	
	 <!-- Target directory for instrumentation files -->  
    <property name="emma.instr.dir" value="/home/ubuntu" />  
      
    <!-- Target directory for coverage files -->  
    <property name="emma.coverage.dir" value="/home/ubuntu" /> 

	<target name="copyjars"
      description="Copies the App Engine JARs to the WAR.">
		<copy
        todir="war/WEB-INF/lib"
        flatten="true">
			<fileset dir="${sdk.dir}/lib/user">
				<include name="**/*.jar" />
			</fileset>
		</copy>
	</target>

	<path id="project.classpath">
		<pathelement path="war/WEB-INF/classes" />
		<fileset dir="war/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${sdk.dir}/lib">
			<include name="shared/**/*.jar" />
		</fileset>
		<fileset dir="${gwt.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="test.classpath">
		<pathelement location="testClasses" />
		<pathelement path="war/WEB-INF/classes" />
		<fileset dir="war/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="testLibs/">
			<include name="**/*.jar" />
		</fileset>			
	</path>
	
	<taskdef resource="emma_ant.properties" classpathref="test.classpath" /> 
	
	  <!-- Analyzes the compiled code and adds instrumentation details for testing -->  
    <target name="emma-instrument" depends="gwt_compile">  
        <mkdir dir="${emma.instr.dir}" />  
        <mkdir dir="${emma.coverage.dir}" />  
        <emma enabled="true">  
            <instr instrpath="war/WEB-INF/classes/n3phele" destdir="${emma.instr.dir}"  
                metadatafile="${emma.coverage.dir}/coverage.emma" merge="true" />  
        </emma>  
    </target> 

	<target name="compile" depends="copyjars"
      description="Compiles Java source and copies other source files to the WAR.">
		<mkdir dir="war/WEB-INF/classes" />
		<copy todir="war/WEB-INF/classes">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac
        srcdir="src"
        destdir="war/WEB-INF/classes"
        classpathref="project.classpath"
        includeAntRuntime="true"
        debug="on" />
	</target>

	<target name="gwt_compile" depends="compile_tests" description="GWT compile to JavaScript">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location="src"/>
				<path refid="project.classpath"/>
			</classpath>
			<jvmarg value="-Xss16M" />
			<arg value="n3phele.N3phele"/>
		</java>
	</target>	

	<target name="compile_tests" depends="compile"
      description="Compiles Java source tests.">
		<mkdir dir="testClasses" />
		<copy todir="testClasses">
			<fileset dir="test">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac
      srcdir="test"
      destdir="testClasses"
      classpathref="test.classpath"
      includeAntRuntime="true"
      />
	</target>

	<target name="junit" depends="emma-instrument">
		 <junit fork="yes" printsummary="yes" haltonfailure="no">  
			<test name="n3phele.AllUnitTests" />
			<formatter type="plain" usefile="false" />
			<classpath refid="test.classpath" />
			<jvmarg value="-Demma.coverage.out.file=${emma.coverage.dir}/coverage.emma" />  
            <jvmarg value="-Demma.coverage.out.merge=true" /> 
		</junit>
	</target>
	
	 <!-- Create XML reports from the coverage information -->  
    <target name="emma-report" depends="junit">  
        <emma enabled="true">  
            <report sourcepath="test">  
                <fileset dir="${emma.coverage.dir}">  
                    <include name="*.emma" />  
                </fileset>  
                <xml outfile="${emma.coverage.dir}/coverage.xml" />  
            </report>  
        </emma>  
    </target>  

	<target name="update" depends="junit"
		description="Uploads the application to App Engine.">
			<appcfg action="update" war="war" />
	</target>

</project>